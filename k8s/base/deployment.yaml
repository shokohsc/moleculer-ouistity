---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: rethinkdb
spec:
  selector:
    matchLabels:
      app: rethinkdb
  template:
    metadata:
      labels:
        app: rethinkdb
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: rethinkdb
          image: rethinkdb:2.4.1
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: rethinkdb
              containerPort: 28015
              protocol: TCP
          livenessProbe:
            httpGet:
              port: http
              path: /
          readinessProbe:
            httpGet:
              port: http
              path: /
          resources:
            requests:
              cpu: 100m
              memory: 256M
            limits:
              cpu: 1000m
              memory: 1024M
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: rethinkdb
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: rethinkdb
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:6.2.6
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 256M
            limits:
              cpu: 1000m
              memory: 1024M
          livenessProbe:
            tcpSocket:
              port: redis
          readinessProbe:
            tcpSocket:
              port: redis
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nats
spec:
  selector:
    matchLabels:
      app: nats
  template:
    metadata:
      labels:
        app: nats
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: nats
          image: nats:2.6.5-alpine
          args:
            - -c
            - /server.conf
          ports:
            - name: nats
              containerPort: 4222
              protocol: TCP
            - name: http
              containerPort: 8222
              protocol: TCP
          livenessProbe:
            httpGet:
              port: http
              path: /
          readinessProbe:
            httpGet:
              port: http
              path: /
          resources:
            requests:
              cpu: 100m
              memory: 256M
            limits:
              cpu: 1000m
              memory: 1024M
          volumeMounts:
            - name: config
              mountPath: /server.conf
              subPath: server.conf
      volumes:
        - name: config
          configMap:
            name: config
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: rabbitmq
spec:
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: rabbitmq
          image: rabbitmq:3.9.11-management-alpine
          env:
            - name: RABBITMQ_ERLANG_COOKIE
              value: ""
            - name: RABBITMQ_DEFAULT_USER
              value: rabbitmq
            - name: RABBITMQ_DEFAULT_PASS
              value: changeme
          ports:
            - name: amqp
              containerPort: 5672
              protocol: TCP
            - name: http
              containerPort: 15672
              protocol: TCP
          livenessProbe:
            httpGet:
              port: http
              path: /
          readinessProbe:
            httpGet:
              port: http
              path: /
          resources:
            requests:
              cpu: 100m
              memory: 256M
            limits:
              cpu: 1000m
              memory: 1024M
          volumeMounts:
            - name: data
              mountPath: /var/lib/rabbitmq/mnesia
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: rabbitmq
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: rabbitmq
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-commander
  labels:
    app: redis-commander
spec:
  selector:
    matchLabels:
      app: redis-commander
  template:
    metadata:
      labels:
        app: redis-commander
    spec:
      containers:
        - name: redis-commander
          image: rediscommander/redis-commander
          imagePullPolicy: IfNotPresent
          env:
            - name: REDIS_HOSTS
              value: redis
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            requests:
              cpu: 10m
              memory: 64M
            limits:
              cpu: 100m
              memory: 64M
